["b7d6239ad50379fbb59ce2bd57c4d0d5e838ac26","b5edf367cb397e385376c3f93ff4609da7a4aeb2",["color-name","simple-swizzle"],[26,63],{"version":3,"sources":["/home/cainarm/professorStars/node_modules/color-string/index.js"],"names":["colorNames","require","swizzle","reverseNames","name","hasOwnProperty","cs","module","exports","to","get","string","prefix","substring","toLowerCase","val","model","hsl","hwb","rgb","value","abbr","hex","rgba","per","keyword","match","i","hexAlpha","i2","parseInt","slice","Math","round","parseFloat","clamp","alpha","h","s","l","a","isNaN","w","b","arguments","hexDouble","length","percent","r","g","hsla","hwba","num","min","max","str","toString","toUpperCase"],"mappings":"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","sourcesContent":["/* MIT license */\nvar colorNames = require('color-name');\nvar swizzle = require('simple-swizzle');\n\nvar reverseNames = {};\n\n// create a list of reverse color names\nfor (var name in colorNames) {\n\tif (colorNames.hasOwnProperty(name)) {\n\t\treverseNames[colorNames[name]] = name;\n\t}\n}\n\nvar cs = module.exports = {\n\tto: {}\n};\n\ncs.get = function (string) {\n\tvar prefix = string.substring(0, 3).toLowerCase();\n\tvar val;\n\tvar model;\n\tswitch (prefix) {\n\t\tcase 'hsl':\n\t\t\tval = cs.get.hsl(string);\n\t\t\tmodel = 'hsl';\n\t\t\tbreak;\n\t\tcase 'hwb':\n\t\t\tval = cs.get.hwb(string);\n\t\t\tmodel = 'hwb';\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tval = cs.get.rgb(string);\n\t\t\tmodel = 'rgb';\n\t\t\tbreak;\n\t}\n\n\tif (!val) {\n\t\treturn null;\n\t}\n\n\treturn {model: model, value: val};\n};\n\ncs.get.rgb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar abbr = /^#([a-f0-9]{3,4})$/i;\n\tvar hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;\n\tvar rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar keyword = /(\\D+)/;\n\n\tvar rgb = [0, 0, 0, 1];\n\tvar match;\n\tvar i;\n\tvar hexAlpha;\n\n\tif (match = string.match(hex)) {\n\t\thexAlpha = match[2];\n\t\tmatch = match[1];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\t// https://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/19\n\t\t\tvar i2 = i * 2;\n\t\t\trgb[i] = parseInt(match.slice(i2, i2 + 2), 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = Math.round((parseInt(hexAlpha, 16) / 255) * 100) / 100;\n\t\t}\n\t} else if (match = string.match(abbr)) {\n\t\tmatch = match[1];\n\t\thexAlpha = match[3];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i] + match[i], 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = Math.round((parseInt(hexAlpha + hexAlpha, 16) / 255) * 100) / 100;\n\t\t}\n\t} else if (match = string.match(rgba)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i + 1], 0);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\trgb[3] = parseFloat(match[4]);\n\t\t}\n\t} else if (match = string.match(per)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\trgb[3] = parseFloat(match[4]);\n\t\t}\n\t} else if (match = string.match(keyword)) {\n\t\tif (match[1] === 'transparent') {\n\t\t\treturn [0, 0, 0, 0];\n\t\t}\n\n\t\trgb = colorNames[match[1]];\n\n\t\tif (!rgb) {\n\t\t\treturn null;\n\t\t}\n\n\t\trgb[3] = 1;\n\n\t\treturn rgb;\n\t} else {\n\t\treturn null;\n\t}\n\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] = clamp(rgb[i], 0, 255);\n\t}\n\trgb[3] = clamp(rgb[3], 0, 1);\n\n\treturn rgb;\n};\n\ncs.get.hsl = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hsl = /^hsla?\\(\\s*([+-]?\\d*[\\.]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar match = string.match(hsl);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar s = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar l = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\n\t\treturn [h, s, l, a];\n\t}\n\n\treturn null;\n};\n\ncs.get.hwb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hwb = /^hwb\\(\\s*([+-]?\\d*[\\.]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar match = string.match(hwb);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar w = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar b = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\t\treturn [h, w, b, a];\n\t}\n\n\treturn null;\n};\n\ncs.to.hex = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn (\n\t\t'#' +\n\t\thexDouble(rgba[0]) +\n\t\thexDouble(rgba[1]) +\n\t\thexDouble(rgba[2]) +\n\t\t(rgba[3] < 1\n\t\t\t? (hexDouble(Math.round(rgba[3] * 255)))\n\t\t\t: '')\n\t);\n};\n\ncs.to.rgb = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ')'\n\t\t: 'rgba(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ', ' + rgba[3] + ')';\n};\n\ncs.to.rgb.percent = function () {\n\tvar rgba = swizzle(arguments);\n\n\tvar r = Math.round(rgba[0] / 255 * 100);\n\tvar g = Math.round(rgba[1] / 255 * 100);\n\tvar b = Math.round(rgba[2] / 255 * 100);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + r + '%, ' + g + '%, ' + b + '%)'\n\t\t: 'rgba(' + r + '%, ' + g + '%, ' + b + '%, ' + rgba[3] + ')';\n};\n\ncs.to.hsl = function () {\n\tvar hsla = swizzle(arguments);\n\treturn hsla.length < 4 || hsla[3] === 1\n\t\t? 'hsl(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%)'\n\t\t: 'hsla(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%, ' + hsla[3] + ')';\n};\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\ncs.to.hwb = function () {\n\tvar hwba = swizzle(arguments);\n\n\tvar a = '';\n\tif (hwba.length >= 4 && hwba[3] !== 1) {\n\t\ta = ', ' + hwba[3];\n\t}\n\n\treturn 'hwb(' + hwba[0] + ', ' + hwba[1] + '%, ' + hwba[2] + '%' + a + ')';\n};\n\ncs.to.keyword = function (rgb) {\n\treturn reverseNames[rgb.slice(0, 3)];\n};\n\n// helpers\nfunction clamp(num, min, max) {\n\treturn Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n\tvar str = num.toString(16).toUpperCase();\n\treturn (str.length < 2) ? '0' + str : str;\n}\n"]}]