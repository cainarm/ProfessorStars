Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index = require('./../../../node_modules/react-transform-hmr/lib/index.js');

var _index2 = _interopRequireDefault(_index);

var _jsxFileName = '/home/cainarm/professorStars/src/Containers/Students/StudentsContainer.js';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _reactRedux = require('react-redux');

var _reactNative = require('react-native');

var _StudentListItem = require('../../Components/StudentListItem');

var _StudentListItem2 = _interopRequireDefault(_StudentListItem);

var _Structure = require('../../Components/Structure');

var _Structure2 = _interopRequireDefault(_Structure);

var _reactNativeModal = require('react-native-modal');

var _reactNativeModal2 = _interopRequireDefault(_reactNativeModal);

var _CreateClassForm = require('../../Components/CreateClassForm');

var _CreateClassForm2 = _interopRequireDefault(_CreateClassForm);

var _StudentsActions = require('../../Actions/StudentsActions');

var _underscore = require('underscore');

var _underscore2 = _interopRequireDefault(_underscore);

var _reactNavigation = require('react-navigation');

var _nativeBase = require('native-base');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _components = {
  Index: {
    displayName: 'Index'
  }
};

var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
  filename: '/home/cainarm/professorStars/src/Containers/Students/StudentsContainer.js',
  components: _components,
  locals: [module],
  imports: [_react3.default]
});

function _wrapComponent(id) {
  return function (Component) {
    return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
  };
}

var styles = _reactNative.StyleSheet.create({
  icon: {
    fontSize: 35,
    color: '#D50000'
  }
});

var Index = _wrapComponent('Index')(function (_React$Component) {
  _inherits(Index, _React$Component);

  function Index(props) {
    _classCallCheck(this, Index);

    var _this = _possibleConstructorReturn(this, (Index.__proto__ || Object.getPrototypeOf(Index)).call(this, props));

    _this.ds = new _reactNative.ListView.DataSource({ rowHasChanged: function rowHasChanged(r1, r2) {
        return _underscore2.default.isMatch(r1, r2);
      } });
    _this.state = {
      students: _this.ds.cloneWithRows(props.students),
      modal: false
    };
    return _this;
  }

  _createClass(Index, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      this.props.getAllStudents(this.props.targetClass);
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      this.setState({
        students: this.ds.cloneWithRows(nextProps.students)
      });
    }
  }, {
    key: 'toggleModal',
    value: function toggleModal() {
      this.setState({
        modal: !this.state.modal
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props$navigation = this.props.navigation,
          navigate = _props$navigation.navigate,
          goBack = _props$navigation.goBack;


      return _react3.default.createElement(
        _Structure2.default,
        {
          title: 'Professor Stars',
          subtitle: 'Alunos',
          hasBackButton: true,
          backButtonAction: function backButtonAction() {
            return _this2.props.navigation.dispatch(_reactNavigation.NavigationActions.back());
          },
          fab: _react3.default.createElement(
            _nativeBase.Fab,
            {
              direction: 'up',
              position: 'bottomRight',
              onPress: function onPress() {
                return _this2.toggleModal();
              },
              style: { right: -10, backgroundColor: "#01579B", position: 'absolute' },
              __source: {
                fileName: _jsxFileName,
                lineNumber: 69
              }
            },
            _react3.default.createElement(_nativeBase.Icon, {
              name: 'md-add',
              __source: {
                fileName: _jsxFileName,
                lineNumber: 75
              }
            })
          ),
          __source: {
            fileName: _jsxFileName,
            lineNumber: 63
          }
        },
        _react3.default.createElement(_reactNative.ListView, {
          style: { marginBottom: 60 },
          dataSource: this.state.students,
          renderRow: function renderRow(_ref) {
            var name = _ref.name,
                stars = _ref.stars;

            return _react3.default.createElement(
              _StudentListItem2.default,
              {
                remove: function remove() {
                  _reactNative.Alert.alert("Aviso", "Tem certeza que deseja deletar este aluno ?", [{ text: "Cancelar", onPress: function onPress() {
                      return null;
                    } }, { text: "Sim ", onPress: function onPress() {
                      return _this2.props.remove(name, _this2.props.targetClass);
                    } }], { cancelable: true });
                },
                stars: stars,
                rate: function rate() {
                  return _this2.props.rate(name, _this2.props.targetClass);
                },
                unRate: function unRate() {
                  return _this2.props.unRate(name, _this2.props.targetClass);
                },
                icon: _react3.default.createElement(_nativeBase.Icon, {
                  name: 'ios-trash-outline',
                  style: styles.icon,
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 103
                  }
                }),
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 86
                }
              },
              name
            );
          },
          __source: {
            fileName: _jsxFileName,
            lineNumber: 81
          }
        }),
        _react3.default.createElement(
          _reactNativeModal2.default,
          {
            isVisible: this.state.modal,
            onBackButtonPress: function onBackButtonPress() {
              return _this2.toggleModal();
            },

            __source: {
              fileName: _jsxFileName,
              lineNumber: 114
            }
          },
          _react3.default.createElement(
            _reactNative.View,
            { style: { backgroundColor: '#fff', height: 206, borderRadius: 4 }, __source: {
                fileName: _jsxFileName,
                lineNumber: 119
              }
            },
            _react3.default.createElement(_CreateClassForm2.default, {
              onCancel: function onCancel() {
                return _this2.toggleModal();
              },
              submit: function submit(value) {
                return _this2.props.add(value, _this2.props.targetClass);
              },
              __source: {
                fileName: _jsxFileName,
                lineNumber: 120
              }
            })
          )
        )
      );
    }
  }]);

  return Index;
}(_react3.default.Component));

var mapStateToProps = function mapStateToProps(state) {
  return {
    students: state.students.students,
    targetClass: state.classes.targetClass
  };
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
  return {
    add: function add(value, name) {
      dispatch((0, _StudentsActions.addStudent)(value, name));
    },
    remove: function remove(value, name) {
      dispatch((0, _StudentsActions.removeStudent)(value, name));
    },
    getAllStudents: function getAllStudents(value) {
      dispatch((0, _StudentsActions.getAllStudents)(value));
    },
    rate: function rate(name, className) {
      dispatch((0, _StudentsActions.rate)(name, className));
    },
    unRate: function unRate(name, className) {
      dispatch((0, _StudentsActions.unRate)(name, className));
    }
  };
};
exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(Index);