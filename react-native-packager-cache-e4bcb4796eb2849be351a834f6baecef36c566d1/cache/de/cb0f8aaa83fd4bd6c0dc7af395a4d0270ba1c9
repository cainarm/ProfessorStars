Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var defaultState = {
    classes: [],
    targetClass: null
};

exports.default = ClassesReducer = function ClassesReducer() {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultState;
    var action = arguments[1];

    switch (action.type) {
        case "ADD_CLASS":
            state = _extends({}, state, {
                classes: [].concat(_toConsumableArray(state.classes), [action.payload])
            });
            break;
        case "ADD_CLASSES":
            state = _extends({}, state, {
                classes: [].concat(_toConsumableArray(action.payload))
            });
            break;
        case "REMOVE_CLASS":
            state = _extends({}, state, {
                classes: state.classes.filter(function (classes) {
                    return classes.name !== action.payload;
                })
            });
            break;
        case "SET_TARGET_CLASS":
            state = _extends({}, state, {
                targetClass: action.payload
            });
            break;
    }
    return state;
};