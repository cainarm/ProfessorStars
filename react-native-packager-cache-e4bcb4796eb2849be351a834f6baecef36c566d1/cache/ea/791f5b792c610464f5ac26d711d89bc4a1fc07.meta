["d498ed9ebdfed5988548a5129b9e025371d86f41","4a9d0dbad7d8b59256b8909bba5a83be5fe70b8d",["react-native/Libraries/Renderer/shims/ReactNativePropRegistry","react","lodash"],[39,221,248],{"version":3,"sources":["/home/cainarm/professorStars/node_modules/react-native-easy-grid/Utils/computeProps.js"],"names":["React","require","_","module","exports","incomingProps","defaultProps","computedProps","clone","children","incomingPropsStyle","style","merge","computedPropsStyle","Array","isArray","forEach","getByID"],"mappings":"AACA;;;;AADA,IAAIA,QAAQC,OAAR,SAAJ;;AAGA,IAAIC,IAAID,OAAJ,UAAJ;;AAEAE,OAAOC,OAAP,GAAiB,UAASC,aAAT,EAAwBC,YAAxB,EAAsC;AAErD,MAAIC,gBAAgB,EAApB;;AAEAF,kBAAgBH,EAAEM,KAAF,CAAQH,aAAR,CAAhB;AACA,SAAOA,cAAcI,QAArB;;AAEA,MAAIC,qBAAqBL,cAAcM,KAAvC;AACA,SAAON,cAAcM,KAArB;;AAIA,MAAIN,aAAJ,EAAmBH,EAAEU,KAAF,CAAQL,aAAR,EAAuBD,YAAvB,EAAqCD,aAArC,EAAnB,KACKE,gBAAgBD,YAAhB;;AAGL,MAAII,kBAAJ,EAAwB;AACtB,QAAIG,qBAAqB,EAAzB;AACAN,kBAAcI,KAAd,GAAsB,EAAtB;AACA,QAAIG,MAAMC,OAAN,CAAcL,kBAAd,CAAJ,EAAuC;AACrCR,QAAEc,OAAF,CAAUN,kBAAV,EAA8B,iBAAS;AACrC,YAAI,OAAOC,KAAP,IAAgB,QAApB,EAA8B;AAC5BT,YAAEU,KAAF,CAAQC,kBAAR,EAA4B,kCAAwBI,OAAxB,CAAgCN,KAAhC,CAA5B;AACD,SAFD,MAEO;AACLT,YAAEU,KAAF,CAAQC,kBAAR,EAA4BF,KAA5B;AACD;AACF,OAND;AAOD,KARD,MAQO;AACL,UAAI,OAAOD,kBAAP,IAA6B,QAAjC,EAA2C;AACzCG,6BAAqB,kCAAwBI,OAAxB,CACnBP,kBADmB,CAArB;AAGD,OAJD,MAIO;AACLG,6BAAqBH,kBAArB;AACD;AACF;;AAEDR,MAAEU,KAAF,CAAQL,cAAcI,KAAtB,EAA6BL,aAAaK,KAA1C,EAAiDE,kBAAjD;AACD;;AAID,SAAON,aAAP;AACD,CA3CD","sourcesContent":["var React = require(\"react\");\nimport ReactNativePropRegistry\n  from \"react-native/Libraries/Renderer/shims/ReactNativePropRegistry\";\nvar _ = require(\"lodash\");\n\nmodule.exports = function(incomingProps, defaultProps) {\n  // External props has a higher precedence\n  var computedProps = {};\n\n  incomingProps = _.clone(incomingProps);\n  delete incomingProps.children;\n\n  var incomingPropsStyle = incomingProps.style;\n  delete incomingProps.style;\n\n  // console.log(defaultProps, incomingProps);\n\n  if (incomingProps) _.merge(computedProps, defaultProps, incomingProps);\n  else computedProps = defaultProps;\n\n  // Pass the merged Style Object instead\n  if (incomingPropsStyle) {\n    var computedPropsStyle = {};\n    computedProps.style = {};\n    if (Array.isArray(incomingPropsStyle)) {\n      _.forEach(incomingPropsStyle, style => {\n        if (typeof style == \"number\") {\n          _.merge(computedPropsStyle, ReactNativePropRegistry.getByID(style));\n        } else {\n          _.merge(computedPropsStyle, style);\n        }\n      });\n    } else {\n      if (typeof incomingPropsStyle == \"number\") {\n        computedPropsStyle = ReactNativePropRegistry.getByID(\n          incomingPropsStyle\n        );\n      } else {\n        computedPropsStyle = incomingPropsStyle;\n      }\n    }\n\n    _.merge(computedProps.style, defaultProps.style, computedPropsStyle);\n  }\n\n  // console.log(\"computedProps \", computedProps);\n\n  return computedProps;\n};\n"]}]