Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index = require('./../../node_modules/react-transform-hmr/lib/index.js');

var _index2 = _interopRequireDefault(_index);

var _jsxFileName = '/home/cainarm/professorStars/src/Components/ClassesList.js';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _reactNative = require('react-native');

var _ListItem = require('../Components/ListItem');

var _ListItem2 = _interopRequireDefault(_ListItem);

var _nativeBase = require('native-base');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _components = {
    ClassesList: {
        displayName: 'ClassesList'
    }
};

var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
    filename: '/home/cainarm/professorStars/src/Components/ClassesList.js',
    components: _components,
    locals: [module],
    imports: [_react3.default]
});

function _wrapComponent(id) {
    return function (Component) {
        return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
    };
}

var styles = _reactNative.StyleSheet.create({
    icon: {
        fontSize: 35,
        color: '#D50000'
    }
});

var ClassesList = _wrapComponent('ClassesList')(function (_Component) {
    _inherits(ClassesList, _Component);

    function ClassesList(props) {
        _classCallCheck(this, ClassesList);

        var _this = _possibleConstructorReturn(this, (ClassesList.__proto__ || Object.getPrototypeOf(ClassesList)).call(this, props));

        _this.ds = new _reactNative.ListView.DataSource({ rowHasChanged: function rowHasChanged(r1, r2) {
                return r1.name !== r2.name;
            } });
        _this.state = {
            classes: _this.ds.cloneWithRows(props.classes)
        };
        return _this;
    }

    _createClass(ClassesList, [{
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {
            this.setState({
                classes: this.ds.cloneWithRows(nextProps.classes)
            });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            return _react3.default.createElement(_reactNative.ListView, {
                style: { marginBottom: 60 },
                dataSource: this.state.classes,
                renderRow: function renderRow(_ref) {
                    var name = _ref.name;

                    return _react3.default.createElement(
                        _ListItem2.default,
                        {
                            onDeleteButtonClick: function onDeleteButtonClick() {
                                _reactNative.Alert.alert("Aviso", "Tem certeza que deseja deletar esta disciplina ?", [{ text: "Cancelar", onPress: function onPress() {
                                        return null;
                                    } }, { text: "Sim ", onPress: function onPress() {
                                        return _this2.props.remove(name);
                                    } }], { cancelable: true });
                            },
                            icon: _react3.default.createElement(_nativeBase.Icon, {
                                name: 'ios-trash-outline',
                                style: styles.icon,
                                __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 51
                                }
                            }),
                            redirect: function redirect() {
                                _this2.props.setTargetClass(name);
                                _this2.props.redirect();
                            },
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 37
                            }
                        },
                        name
                    );
                },
                __source: {
                    fileName: _jsxFileName,
                    lineNumber: 32
                }
            });
        }
    }]);

    return ClassesList;
}(_react2.Component));

exports.default = ClassesList;