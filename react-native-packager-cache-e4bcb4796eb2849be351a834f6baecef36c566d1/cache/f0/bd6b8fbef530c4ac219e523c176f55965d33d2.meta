["f8c3284d2289c05cf2a08fddea052ae1bb7b63eb","9c51f4ca86656d0b79022b2989d66c377487d55e",["./Classes","react-native","regenerator-runtime"],[256,298,349],{"version":3,"sources":["/home/cainarm/professorStars/src/Api/Students.js"],"names":["getAllStudents","createStudent","removeStudent","rate","unRate","className","data","students","forEach","element","name","student","classes","push","i","setItem","JSON","stringify","cl","filter","stars"],"mappings":"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","sourcesContent":["import { getAllClasses } from './Classes';\nimport { AsyncStorage } from 'react-native';\n\nexport async function getAllStudents(className){\n    try{\n        let data = await getAllClasses();\n        let students = [];\n\n\n        //search for students from specific class\n        data.forEach(element => {\n            if(element.name == className){\n                students = element.students;\n            }\n        });\n\n        return students;\n\n    }catch(err){\n        throw err;\n    }\n}\n\nexport async function createStudent(student, className){\n    let classes = await getAllClasses();\n    let students = await getAllStudents(className);\n    students.push(student);\n\n\n    //mutate te original array, adding the new student\n    classes.forEach((element, i) => {\n        if(element.name === className){\n            classes[i].students = students;\n        }\n    });\n    AsyncStorage.setItem(\"Classes\", JSON.stringify(classes));\n}\n\nexport async function removeStudent(name, className){\n    let classes = await getAllClasses();\n    \n\n    //search for specific class\n    cl = classes.filter(element => element.name === className);\n\n    //search for student in that class\n    let students = cl[0].students.filter(element => element.name !== name);\n    \n    //mutate the original class, removing the student\n    classes.forEach((element, i) => {\n        if(element.name === className){\n            classes[i].students = students;\n        }\n    });\n\n    AsyncStorage.setItem(\"Classes\", JSON.stringify(classes));\n}\n\nexport async function rate(name, className){\n    let classes = await getAllClasses();\n    let students = await getAllStudents(className);\n \n    //find the student in array, and rate him\n    students.forEach((student, i) => {\n        if(student.name === name){\n            students[i].stars = student.stars + 1;\n        }\n    });\n\n    //mutate the original array with the mutated object\n    classes.forEach((cl, i) => {\n        if(cl.name === className){\n            classes[i].students = students;\n\n        }\n    });\n\n    AsyncStorage.setItem(\"Classes\", JSON.stringify(classes));\n}\n\nexport async function unRate(name, className){\n    let classes = await getAllClasses();\n    let students = await getAllStudents(className);\n\n    //find the student in array, and unRate him\n    students.forEach((student, i) => {\n        if(student.name === name && student.stars > 0){\n            students[i].stars = student.stars - 1;\n        }\n    });\n    \n    //mutate the original array with the mutated object\n    classes.forEach((cl, i) => {\n        if(cl.name === className){\n            classes[i].students = students;\n\n        }\n    });\n\n    AsyncStorage.setItem(\"Classes\", JSON.stringify(classes));\n}"]}]