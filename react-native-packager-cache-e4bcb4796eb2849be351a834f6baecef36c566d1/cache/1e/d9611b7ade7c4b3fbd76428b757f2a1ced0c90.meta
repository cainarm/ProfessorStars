["444719a81957130b6406f1c79a8e94d2edaefec3","e71f421067637917ddb97b78d85776c240319540",[],[],{"version":3,"sources":["/home/cainarm/professorStars/node_modules/redux/lib/compose.js"],"names":["exports","__esModule","compose","_len","arguments","length","funcs","Array","_key","arg","reduce","a","b","apply","undefined"],"mappings":"AAAA;;AAEAA,QAAQC,UAAR,GAAqB,IAArB;AACAD,QAAQ,SAAR,IAAqBE,OAArB;;;AAYA,SAASA,OAAT,GAAmB;AACjB,OAAK,IAAIC,OAAOC,UAAUC,MAArB,EAA6BC,QAAQC,MAAMJ,IAAN,CAArC,EAAkDK,OAAO,CAA9D,EAAiEA,OAAOL,IAAxE,EAA8EK,MAA9E,EAAsF;AACpFF,UAAME,IAAN,IAAcJ,UAAUI,IAAV,CAAd;AACD;;AAED,MAAIF,MAAMD,MAAN,KAAiB,CAArB,EAAwB;AACtB,WAAO,UAAUI,GAAV,EAAe;AACpB,aAAOA,GAAP;AACD,KAFD;AAGD;;AAED,MAAIH,MAAMD,MAAN,KAAiB,CAArB,EAAwB;AACtB,WAAOC,MAAM,CAAN,CAAP;AACD;;AAED,SAAOA,MAAMI,MAAN,CAAa,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAClC,WAAO,YAAY;AACjB,aAAOD,EAAEC,EAAEC,KAAF,CAAQC,SAAR,EAAmBV,SAAnB,CAAF,CAAP;AACD,KAFD;AAGD,GAJM,CAAP;AAKD","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = compose;\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\n\nfunction compose() {\n  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(undefined, arguments));\n    };\n  });\n}"]}]