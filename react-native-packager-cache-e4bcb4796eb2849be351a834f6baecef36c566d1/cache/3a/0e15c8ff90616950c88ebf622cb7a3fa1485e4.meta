["f507c854261dbbc937fc46f89b48623b296a8e97","ec51f5b633cf481398032ec2664968a820120453",["react","prop-types","react-native","./tweener"],[137,232,342,383],{"version":3,"sources":["/home/cainarm/professorStars/node_modules/react-native-drawer/index.js"],"names":["deviceScreen","get","DOUBLE_TAP_INTERVAL","TAP_DURATION","propsWhomRequireUpdate","Drawer","_length","_prevLength","_offsetOpen","_offsetClosed","_open","_panning","_tweenPending","_activeTween","_lastPress","_panStartTime","_syncAfterUpdate","_interactionHandle","state","viewport","getChildContext","drawer","initialize","props","fullLength","getDeviceLength","getClosedOffset","getOpenOffset","styles","container","flex","justifyContent","alignItems","main","position","borderWidth","isLeftOrRightSide","top","left","initializeOpen","open","side","type","setNativeProps","style","stylesheet","create","responder","onStartShouldSetPanResponder","onStartShouldSetPanResponderCapture","onMoveShouldSetPanResponder","onMoveShouldSetPanResponderCapture","onPanResponderMove","onPanResponderRelease","onPanResponderTerminate","resync","updatePosition","mainProps","drawerProps","ratio","getOpenLength","mainOverlayProps","drawerOverlayProps","tweenHandler","propsFrag","mainOverlay","drawerOverlay","e","gestureState","shouldOpenDrawer","getGestureDelta","close","shouldCaptureGestures","processShouldSet","negotiatePan","processMoveShouldSet","delta","acceptPan","isRightOrBottomSide","length","Math","min","max","getClosedLength","Date","now","processTapGestures","abs","inMask","testPanResponderMask","terminateActiveTween","disabled","deltaOppositeAxis","getGestureDeltaOppositeAxis","swipeToLeftOrTop","swipeToRightOrBottom","swipeOppositeAxis","swipeInCloseDirection","isLeftOrTopSide","acceptTap","tapToClose","acceptDoubleTap","getTime","timeDelta","context","_childDrawer","pos0","nativeEvent","pageX","pageY","deltaOpen","deltaClose","getOpenMask","getClosedMask","terminate","cb","start","end","onOpenStart","setInteractionHandle","duration","tweenDuration","easingType","tweenEasing","onFrame","tweenValue","onEnd","adjustForCaptureGestures","onOpen","clearInteractionHandle","onCloseStart","onClose","toggle","handleSetViewport","layout","oldViewport","width","height","didRotationChange","setState","requiresResync","nextProps","i","key","getMainWidth","getMainHeight","isTopOrBottomSide","getDrawerWidth","getDrawerHeight","panCloseMask","panOpenMask","openDrawerOffset","closedDrawerOffset","dx","dy","isRTL","includes","_registerChildDrawer","openDrawerThreshold","process","env","NODE_ENV","console","error","panStartCompensation","relativeDrag","hasActiveHeading","panThreshold","captureGestures","shouldCapture","pointerEvents","useInteractionManager","createInteractionHandle","first","renderMain","renderDrawer","second","panHandlers","c","children","overlay","elevation","content","tweenPresets","parallax","propTypes","bool","oneOf","node","oneOfType","number","func","object","string","any","defaultProps","contextTypes","childContextTypes","right","bottom","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { PanResponder, View, StyleSheet, Dimensions, InteractionManager, I18nManager } from 'react-native'\n\nimport tween from './tweener'\n\nlet deviceScreen = Dimensions.get('window')\nconst DOUBLE_TAP_INTERVAL = 500\nconst TAP_DURATION = 250\nconst propsWhomRequireUpdate = ['closedDrawerOffset', 'openDrawerOffset', 'type', 'styles']\n\nexport default class Drawer extends Component {\n\n  _length = 0;\n  _prevLength = 0;\n  _offsetOpen = 0;\n  _offsetClosed = 0;\n  _open = false;\n  _panning = false;\n  _tweenPending = false;\n  _activeTween = null;\n  _lastPress = 0;\n  _panStartTime = 0;\n  _syncAfterUpdate = false;\n  _interactionHandle = null;\n\n  static tweenPresets = {\n    parallax: (ratio, side = 'left') => {\n      let drawer = { [side] : -150 * (1 - ratio)}\n      return { drawer }\n    }\n  };\n\n  state = {\n    viewport: deviceScreen\n  };\n\n  static propTypes = {\n    acceptDoubleTap: PropTypes.bool,\n    acceptPan: PropTypes.bool,\n    acceptTap: PropTypes.bool,\n    captureGestures: PropTypes.oneOf([true, false, 'open', 'closed']),\n    children: PropTypes.node,\n    closedDrawerOffset: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n    content: PropTypes.node,\n    disabled: PropTypes.bool,\n    elevation: PropTypes.number,\n    initializeOpen: PropTypes.bool,\n    open: PropTypes.bool,\n    negotiatePan: PropTypes.bool,\n    onClose: PropTypes.func,\n    onCloseStart: PropTypes.func,\n    onOpen: PropTypes.func,\n    onOpenStart: PropTypes.func,\n    openDrawerOffset: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n    panThreshold: PropTypes.number,\n    panCloseMask: PropTypes.number,\n    panOpenMask: PropTypes.number,\n    side: PropTypes.oneOf(['left', 'right', 'top', 'bottom']),\n    styles: PropTypes.object,\n    tapToClose: PropTypes.bool,\n    tweenDuration: PropTypes.number,\n    tweenEasing: PropTypes.string,\n    tweenHandler: PropTypes.func,\n    type: PropTypes.oneOf(['overlay', 'static', 'displace']),\n    useInteractionManager: PropTypes.bool,\n\n    // deprecated\n    panStartCompensation: PropTypes.bool,\n    openDrawerThreshold: PropTypes.any,\n  };\n\n  static defaultProps = {\n    open: null,\n    initializeOpen: false,\n\n    type: 'displace',\n    closedDrawerOffset: 0,\n    openDrawerOffset: 0,\n    panThreshold: 0.25, // @TODO consider rename to panThreshold\n    panOpenMask: null, // defaults to closedDrawerOffset\n    panCloseMask: null, // defaults to openDrawerOffset\n\n    tweenHandler: null,\n    tweenDuration: 250,\n    tweenEasing: 'linear',\n\n    disabled: false,\n    negotiatePan: false,\n    captureGestures: 'open',\n    acceptDoubleTap: false,\n    acceptTap: false,\n    acceptPan: true,\n    tapToClose: false,\n\n    styles: {},\n    elevation: 0,\n    onOpen: () => {},\n    onClose: () => {},\n    side: 'left',\n\n    useInteractionManager: false,\n  };\n\n  /*** CONTEXT ***/\n  static contextTypes = { drawer: PropTypes.object };\n  static childContextTypes = { drawer: PropTypes.object };\n  getChildContext = () => ({ drawer: this });\n  /*** END CONTEXT ***/\n\n  _registerChildDrawer(drawer) {\n    // Store child drawer for gesture disambiguation with multi drawer\n    // @TODO make cleaner, generalize to work with 3+ drawers, prop to disable/configure\n    this._childDrawer = drawer\n  }\n\n  componentWillMount() {\n    if (this.context.drawer) this.context.drawer._registerChildDrawer(this)\n    if (this.props.openDrawerThreshold && process.env.NODE_ENV !== 'production') console.error('react-native-drawer: openDrawerThreshold is obsolete. Use panThreshold instead.')\n    if (this.props.panStartCompensation && process.env.NODE_ENV !== 'production') console.error('react-native-drawer: panStartCompensation is deprecated.')\n    if (this.props.relativeDrag && process.env.NODE_ENV !== 'production') console.error('react-native-drawer: relativeDrag is deprecated.')\n    this.initialize(this.props)\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.requiresResync(nextProps)) this.resync(null, nextProps)\n\n    if (nextProps.open !== null && this._open !== nextProps.open) {\n      this._syncAfterUpdate = true\n      this._open = nextProps.open\n    }\n  }\n\n  componentDidUpdate() {\n    if (this._syncAfterUpdate) {\n      this._syncAfterUpdate = false\n      this._open ? this.open('force') : this.close('force')\n    }\n  }\n\n  initialize = (props) => {\n    let fullLength = this.getDeviceLength();\n    this._offsetClosed = this.getClosedOffset(props, this.state.viewport)\n    this._offsetOpen = this.getOpenOffset(props, this.state.viewport)\n    // add function options\n    this._prevLength = this._length\n\n    let styles = {\n      container: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n      },\n    }\n\n    styles.main = Object.assign({\n      position: 'absolute',\n      borderWidth: 0,\n    }, this.isLeftOrRightSide() ? {top: 0} : {left: 0}, this.props.styles.main)\n\n    styles.drawer = Object.assign({\n      position: 'absolute',\n      borderWidth:0,\n    }, this.isLeftOrRightSide() ? {top: 0} : {left: 0}, this.props.styles.drawer)\n\n    if (props.initializeOpen || props.open) { // open\n      this._open = true\n      this._length = fullLength - this._offsetOpen\n      styles.main[this.props.side] = 0\n      styles.drawer[this.props.side] = 0\n      if (props.type === 'static') styles.main[this.props.side] = fullLength - this._offsetOpen\n      if (props.type === 'displace') styles.main[this.props.side] = fullLength - this._offsetOpen\n    } else { // closed\n      this._open = false\n      this._length = this._offsetClosed\n      styles.main[this.props.side] = this._offsetClosed\n      if (props.type === 'static') styles.drawer[this.props.side] = 0\n      if (props.type === 'overlay') styles.drawer[this.props.side] = this._offsetClosed + this._offsetOpen - fullLength\n      if (props.type === 'displace') styles.drawer[this.props.side] = - fullLength + this._offsetClosed + this._offsetOpen\n    }\n\n    if (this.main) {\n      this.drawer.setNativeProps({ style: {left: styles.drawer.left}})\n      this.main.setNativeProps({ style: {left: styles.main.left}})\n    } else {\n      this.stylesheet = StyleSheet.create(styles)\n      this.responder = PanResponder.create({\n        onStartShouldSetPanResponder: this.onStartShouldSetPanResponder,\n        onStartShouldSetPanResponderCapture: this.onStartShouldSetPanResponderCapture,\n        onMoveShouldSetPanResponder: this.onMoveShouldSetPanResponder,\n        onMoveShouldSetPanResponderCapture: this.onMoveShouldSetPanResponderCapture,\n        onPanResponderMove: this.onPanResponderMove,\n        onPanResponderRelease: this.onPanResponderRelease,\n\tonPanResponderTerminate: this.onPanResponderTerminate\n      })\n    }\n\n    this.resync(null, props)\n  };\n\n  updatePosition = () => {\n    let mainProps = {}\n    let drawerProps = {}\n    let ratio = (this._length - this._offsetClosed) / (this.getOpenLength() - this._offsetClosed)\n\n    switch (this.props.type) {\n      case 'overlay':\n        drawerProps[this.props.side] = -this.getDeviceLength() + this._offsetOpen + this._length\n        mainProps[this.props.side] = this._offsetClosed\n        break\n      case 'static':\n        mainProps[this.props.side] = this._length\n        drawerProps[this.props.side] = 0\n        break\n      case 'displace':\n        mainProps[this.props.side] = this._length\n        drawerProps[this.props.side] = -this.getDeviceLength() + this._length + this._offsetOpen\n        break\n    }\n\n    let mainOverlayProps = null\n    let drawerOverlayProps = null\n    if (this.props.tweenHandler) {\n      let propsFrag = this.props.tweenHandler(ratio, this.props.side)\n      mainProps = Object.assign(mainProps, propsFrag.main)\n      drawerProps = Object.assign(drawerProps, propsFrag.drawer)\n      mainOverlayProps = propsFrag.mainOverlay\n      drawerOverlayProps = propsFrag.drawerOverlay\n    }\n    if (this.main && this.drawer && this.mainOverlay && this.drawerOverlay) {\n      this.drawer.setNativeProps({style: drawerProps})\n      this.main.setNativeProps({style: mainProps})\n      if (mainOverlayProps) this.mainOverlay.setNativeProps({style: mainOverlayProps})\n      if (drawerOverlayProps) this.drawerOverlay.setNativeProps({style: drawerOverlayProps})\n    }\n  };\n\n  shouldOpenDrawer(delta) {\n    let hasActiveHeading = this._open ^ delta > 0 ^ this.isRightOrBottomSide()\n    if (!hasActiveHeading) return this._open\n    else return this._open ^ Math.abs(delta) > this.getDeviceLength() * this.props.panThreshold\n  }\n\n  onPanResponderTerminate = (e, gestureState) => {\n    this._panning = false\n    this.shouldOpenDrawer(this.getGestureDelta(gestureState)) ? this.open() : this.close()\n  };\n\n  onStartShouldSetPanResponderCapture = (e, gestureState) => {\n    if (this.shouldCaptureGestures()) return this.processShouldSet(e, gestureState)\n    return false\n  };\n\n  onStartShouldSetPanResponder = (e, gestureState) => {\n    if (!this.shouldCaptureGestures()) return this.processShouldSet(e, gestureState)\n    return false\n  };\n\n  onMoveShouldSetPanResponderCapture = (e, gestureState) => {\n    if (this.shouldCaptureGestures() && this.props.negotiatePan) return this.processMoveShouldSet(e, gestureState)\n    return false\n  };\n\n  onMoveShouldSetPanResponder = (e, gestureState) => {\n    if (!this.shouldCaptureGestures() && this.props.negotiatePan) return this.processMoveShouldSet(e, gestureState)\n    return false\n  };\n\n  onPanResponderMove = (e, gestureState) => {\n    let delta = this.getGestureDelta(gestureState);\n    if (!this.props.acceptPan) return false\n\n    //Do nothing if we are panning the wrong way\n    if (this._open ^ delta < 0 ^ this.isRightOrBottomSide()) return false\n\n    delta = this.isRightOrBottomSide() ? delta * -1 : delta\n    let length = this._prevLength + delta\n    length = Math.min(length, this.getOpenLength())\n    length = Math.max(length, this.getClosedLength())\n    this._length = length\n\n    this.updatePosition()\n    this._panning = true\n  };\n\n  onPanResponderRelease = (e, gestureState) => {\n    let delta = this.getGestureDelta(gestureState);\n    this._panning = false\n    if (Date.now() - this._panStartTime < TAP_DURATION) this.processTapGestures()\n    if (Math.abs(delta) < 50 && this._activeTween) return\n\n    this.shouldOpenDrawer(delta) ? this.open() : this.close()\n    this.updatePosition()\n    this._prevLength = this._length\n  };\n\n  processShouldSet = (e, gestureState) => {\n    let inMask = this.testPanResponderMask(e, gestureState)\n    if (!inMask) return false\n    this._panStartTime = Date.now()\n    if (inMask && this.shouldCaptureGestures()) return true\n    if (this.props.negotiatePan) return false\n    if (!this.props.acceptPan) return false\n    this.terminateActiveTween()\n    return true\n  };\n\n  processMoveShouldSet = (e, gestureState) => {\n    let inMask = this.testPanResponderMask(e, gestureState)\n    if (!inMask) return false\n    if (!this.props.acceptPan) return false\n\n    if (!this.props.negotiatePan || this.props.disabled || !this.props.acceptPan || this._panning) return false\n    let delta = this.getGestureDelta(gestureState)\n    let deltaOppositeAxis = this.getGestureDeltaOppositeAxis(gestureState)\n    let swipeToLeftOrTop = (delta < 0) ? true : false\n    let swipeToRightOrBottom = (delta > 0) ? true : false\n    let swipeOppositeAxis = (Math.abs(deltaOppositeAxis) >= Math.abs(delta)) ? true : false\n    let swipeInCloseDirection = (this.isLeftOrTopSide()) ? swipeToLeftOrTop : swipeToRightOrBottom\n    if (swipeOppositeAxis || (this._open && !swipeInCloseDirection) || (!this._open && swipeInCloseDirection)) {\n      return false\n    }\n\n    this.terminateActiveTween()\n    return true\n  };\n\n  processTapGestures = () => {\n    if (this._activeTween) return false // disable tap gestures during tween\n    if (this.props.acceptTap || (this.props.tapToClose && this._open)) {\n      this._open ? this.close() : this.open()\n      return true\n    }\n    if (this.props.acceptDoubleTap) {\n      let now = new Date().getTime()\n      let timeDelta = now - this._lastPress\n      this._lastPress = now\n      if (timeDelta < DOUBLE_TAP_INTERVAL) {\n        this._open ? this.close() : this.open()\n        return true\n      }\n    }\n    return false\n  };\n\n  shouldCaptureGestures() {\n    if (this.props.captureGestures === true) return true\n    if (this.props.captureGestures === 'closed' && this._open === false) return true\n    if (this.props.captureGestures === 'open' && this._open === true) return true\n    return false\n  }\n\n  testPanResponderMask = (e, gestureState) => {\n    if (this.props.disabled) return false\n\n    // Disable if parent or child drawer exist and are open\n    // @TODO make cleaner, generalize to work with 3+ drawers, prop to disable/configure\n    if (this.context.drawer && this.context.drawer._open) return false\n    if (this._childDrawer && this._childDrawer._open) return false\n\n    let pos0 = this.isLeftOrRightSide() ? e.nativeEvent.pageX : e.nativeEvent.pageY\n    let deltaOpen = this.isLeftOrTopSide() ? this.getDeviceLength() - pos0 : pos0\n    let deltaClose = this.isLeftOrTopSide() ? pos0 : this.getDeviceLength() - pos0\n\n    if ( this._open && deltaOpen > this.getOpenMask() ) return false\n    if ( !this._open && deltaClose > this.getClosedMask() ) return false\n    return true\n  };\n\n  terminateActiveTween = () => {\n    if (this._activeTween) {\n      this._activeTween.terminate()\n      this._activeTween = null\n    }\n  };\n\n  open = (type, cb) => {\n    let start = this._length\n    let end = this.getOpenLength()\n\n    if (this._activeTween) return\n    if (type !== 'force' && start - end === 0 && this._open === true) return // do nothing if the delta is 0\n\n    this.props.onOpenStart && this.props.onOpenStart()\n    this.setInteractionHandle()\n    this._activeTween = tween({\n      start: this._length,\n      end: this.getOpenLength(),\n      duration: this.props.tweenDuration,\n      easingType: this.props.tweenEasing,\n      onFrame: (tweenValue) => {\n        this._length = tweenValue\n        this.updatePosition()\n      },\n      onEnd: () => {\n        this._activeTween = null\n        this._open = true\n        this._prevLength = this._length\n        this.adjustForCaptureGestures()\n        this.props.onOpen()\n        this.clearInteractionHandle()\n\n        if(typeof type === 'function') {\n          type() // this is actually a callback\n        } else cb && cb()\n\n      }\n    })\n  };\n\n  close = (type, cb) => {\n    let start = this._length\n    let end = this.getClosedLength()\n\n    if (this._activeTween) return\n    if (type !== 'force' && start - end === 0 && this._open === false) return // do nothing if the delta is 0\n\n    this.props.onCloseStart && this.props.onCloseStart()\n    this.setInteractionHandle()\n    this._activeTween = tween({\n      start,\n      end,\n      easingType: this.props.tweenEasing,\n      duration: this.props.tweenDuration,\n      onFrame: (tweenValue) => {\n        this._length = tweenValue\n        this.updatePosition()\n      },\n      onEnd: () => {\n        this._activeTween = null\n        this._open = false\n        this._prevLength = this._length\n        this.adjustForCaptureGestures()\n        this.props.onClose()\n        this.clearInteractionHandle()\n\n        if(typeof type === 'function') {\n          type() // this is actually a callback\n        } else cb && cb()\n\n      }\n    })\n  };\n\n  adjustForCaptureGestures() {\n    if (!this.props.captureGestures) return\n    let shouldCapture = this.shouldCaptureGestures()\n    if (this.mainOverlay && this.drawerOverlay) {\n      this.mainOverlay.setNativeProps({ pointerEvents: shouldCapture && this._open ? 'auto' : 'none' })\n      this.drawerOverlay.setNativeProps({ pointerEvents: shouldCapture && !this._open ? 'auto' : 'none' })\n    }\n  }\n\n  setInteractionHandle() {\n    if (this._interactionHandle) InteractionManager.clearInteractionHandle(this._interactionHandle)\n    if (this.props.useInteractionManager) this._interactionHandle = InteractionManager.createInteractionHandle()\n  }\n\n  clearInteractionHandle() {\n    if (this._interactionHandle) InteractionManager.clearInteractionHandle(this._interactionHandle)\n  }\n\n  toggle = () => {\n    this._open ? this.close() : this.open()\n  };\n\n  handleSetViewport = (e) => {\n    let viewport = e.nativeEvent.layout\n    let oldViewport = this.state.viewport\n    if (viewport.width === oldViewport.width && viewport.height === oldViewport.height) return\n    let didRotationChange = viewport.width !== oldViewport.width\n    this.resync(viewport, null, didRotationChange)\n  };\n\n  resync = (viewport, props, didRotationChange) => {\n    if (didRotationChange) this._syncAfterUpdate = true\n    viewport = viewport || this.state.viewport\n    props = props || this.props\n    this._offsetClosed = this.getClosedOffset(props, viewport)\n    this._offsetOpen = this.getOpenOffset(props, viewport)\n    this.setState({ viewport })\n  };\n\n  requiresResync = (nextProps) => {\n    for (let i = 0; i < propsWhomRequireUpdate.length; i++) {\n      let key = propsWhomRequireUpdate[i]\n      if (this.props[key] !== nextProps[key]) return true\n    }\n  };\n\n  /*** DYNAMIC GETTERS ***/\n  getDeviceLength = (viewport = this.state.viewport) => this.isLeftOrRightSide() ? viewport.width : viewport.height;\n  getOpenLength = () => this.getDeviceLength() - this._offsetOpen;\n  getClosedLength = () => this._offsetClosed;\n  getMainWidth = (viewport = this.state.viewport) => {\n    return this.isLeftOrRightSide() ? viewport.width - this._offsetClosed : viewport.width;\n  };\n  getMainHeight = (viewport = this.state.viewport) => {\n    return this.isTopOrBottomSide() ? viewport.height - this._offsetClosed : viewport.height;\n  };\n  getDrawerWidth = (viewport = this.state.viewport) => {\n    return this.isLeftOrRightSide() ? viewport.width - this._offsetOpen : viewport.width;\n  };\n  getDrawerHeight = (viewport = this.state.viewport) => {\n    return this.isTopOrBottomSide() ? viewport.height - this._offsetOpen : viewport.height;\n  };\n  getOpenMask = (viewport = this.state.viewport) => {\n    if (this.props.panCloseMask && this.props.panCloseMask % 1 === 0) return this.props.panCloseMask\n    if (this.props.panCloseMask) return this.getDeviceLength(viewport) * this.props.panCloseMask\n    return Math.max(0.05, this._offsetOpen)\n  };\n  getClosedMask = () => {\n    if (this.props.panOpenMask && this.props.panOpenMask % 1 === 0) return this.props.panOpenMask\n    if (this.props.panOpenMask) return this.getDeviceLength() * this.props.panOpenMask\n    return Math.max(0.05, this._offsetClosed)\n  };\n  getOpenOffset = (props, viewport) => {\n    if (typeof props.openDrawerOffset === 'function') return props.openDrawerOffset(viewport)\n    return props.openDrawerOffset > 1 || props.openDrawerOffset < 0 ? props.openDrawerOffset : props.openDrawerOffset * this.getDeviceLength(viewport)\n  };\n  getClosedOffset = (props, viewport) => {\n    if (typeof props.closedDrawerOffset === 'function') return props.closedDrawerOffset(viewport)\n    return props.closedDrawerOffset > 1 || props.closedDrawerOffset < 0 ? props.closedDrawerOffset : props.closedDrawerOffset * this.getDeviceLength(viewport)\n  };\n  getGestureDelta = (gestureState) => this.isLeftOrRightSide() ? gestureState.dx : gestureState.dy;\n  getGestureDeltaOppositeAxis = (gestureState) => this.isLeftOrRightSide() ? gestureState.dy : gestureState.dx;\n  /*** END DYNAMIC GETTERS ***/\n\n  isLeftOrRightSide = () => {\n    if (I18nManager.isRTL) {\n      return [\"right\", \"left\"].includes(this.props.side)\n    } else {\n      return [\"left\", \"right\"].includes(this.props.side)\n    }\n  }\n  isTopOrBottomSide = () => [\"top\", \"bottom\"].includes(this.props.side);\n  isLeftOrTopSide = () => {\n    let side = \"left\";\n    if (I18nManager.isRTL) {\n      side = \"right\";\n    }\n    return [side, \"top\"].includes(this.props.side);\n  }\n  isRightOrBottomSide = () => {\n    let side = \"right\"\n    if (I18nManager.isRTL) {\n      side = \"left\"\n    }\n    return [side, \"bottom\"].includes(this.props.side);\n  }\n\n  render() {\n    let first = this.props.type === 'overlay' ? this.renderMain() : this.renderDrawer()\n    let second = this.props.type === 'overlay' ? this.renderDrawer() : this.renderMain()\n\n    return (\n      <View\n        key=\"drawerContainer\"\n        onLayout={this.handleSetViewport}\n        style={this.stylesheet.container}\n        >\n        {first}\n        {second}\n      </View>\n    )\n  }\n\n  renderMain() {\n    return (\n      <View\n        {...this.responder.panHandlers}\n        key=\"main\"\n        ref={c => this.main = c}\n        style={[this.stylesheet.main, {height: this.getMainHeight(), width: this.getMainWidth()}]}\n        >\n        {this.props.children}\n        <View\n          pointerEvents={ this._open && this.shouldCaptureGestures() ? 'auto' : 'none' }\n          ref={c => this.mainOverlay = c}\n          style={[styles.overlay, this.props.styles && this.props.styles.mainOverlay]}\n          />\n      </View>\n    )\n  }\n\n  renderDrawer() {\n    return (\n      <View\n        {...this.responder.panHandlers}\n        key=\"drawer\"\n        ref={c => this.drawer = c}\n        elevation={this.props.elevation}\n        style={[this.stylesheet.drawer, {height: this.getDrawerHeight(), width: this.getDrawerWidth()}]}\n        >\n        {this.props.content}\n        <View\n          pointerEvents={ !this._open && this.shouldCaptureGestures() ? 'auto' : 'none' }\n          ref={c => this.drawerOverlay = c}\n          style={[styles.overlay, this.props.styles && this.props.styles.drawerOverlay]}\n          />\n      </View>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  overlay: {\n    right: 0,\n    left: 0,\n    top: 0,\n    bottom: 0,\n    position: 'absolute',\n    backgroundColor: 'transparent'\n  }\n})\n"]}]