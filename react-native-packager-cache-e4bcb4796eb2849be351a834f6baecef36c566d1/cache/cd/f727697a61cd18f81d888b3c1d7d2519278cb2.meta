["b0c65f0c7b0be1bbe8f0496c24fc72983c0b1337","574aedbddb0d27da16b016a79e0c74c5ce1ae368",["react","react-native","../Utils/computeProps","lodash"],[131,228,274,396],{"version":3,"sources":["/home/cainarm/professorStars/node_modules/react-native-easy-grid/Components/Col.js"],"names":["ColumnNB","type","flexDirection","flex","props","size","style","width","defaultProps","nativeProps","_root","setNativeProps","onPress","component","prepareRootProps","children"],"mappings":"AAAA;;;;;;;AAEA;;;;AACA;;AACA;;;;AACA;;;;IAGqBA,Q;;;;;;;;;;uCACE;;AAEf,UAAIC,OAAO;AACVC,uBAAe,QADL;AAEVC,cAAO,KAAKC,KAAL,CAAWC,IAAZ,GAAoB,KAAKD,KAAL,CAAWC,IAA/B,GAAuC,KAAKD,KAAL,CAAWE,KAAX,IAAoB,KAAKF,KAAL,CAAWE,KAAX,CAAiBC,KAAtC,GAA+C,CAA/C,GAAmD;AAFrF,OAAX;;AAKA,UAAIC,eAAe;AACfF,eAAOL;AADQ,OAAnB;AAGA,aAAO,4BAAa,KAAKG,KAAlB,EAAyBI,YAAzB,CAAP;AAEH;;;mCAEcC,W,EAAa;AAC1B,WAAKC,KAAL,CAAWC,cAAX,CAA0BF,WAA1B;AACD;;;6BAEM;AAAA;;AACP,UAAG,KAAKL,KAAL,CAAWQ,OAAd,EAAsB;AACpB,eACE;AAAA;AAAA,YAAkB,SAAS,KAAKR,KAAL,CAAWQ,OAAtC;AACJ;AAAA;AAAA;AACE,mBAAK;AAAA,uBAAa,OAAKF,KAAL,GAAaG,SAA1B;AAAA;AADP,eAEM,KAAKT,KAFX,EAGM,KAAKU,gBAAL,EAHN;AAIE,iBAAKV,KAAL,CAAWW;AAJb;AADI,SADF;AASD,OAVD,MAWI;AACF,eACE;AAAA;AAAA;AACF,iBAAK;AAAA,qBAAa,OAAKL,KAAL,GAAaG,SAA1B;AAAA;AADH,aAEE,KAAKT,KAFP,EAGE,KAAKU,gBAAL,EAHF;AAIF,eAAKV,KAAL,CAAWW;AAJT,SADF;AAOD;AACF;;;;;kBAxCkBf,Q","sourcesContent":["'use strict';\n\nimport React, {Component} from 'react';\nimport {View, TouchableOpacity} from 'react-native';\nimport computeProps from '../Utils/computeProps';\nimport _ from 'lodash';\n\n\nexport default class ColumnNB extends Component {\n    prepareRootProps() {\n\n        var type = {\n        \tflexDirection: 'column',\n        \tflex: (this.props.size) ? this.props.size : (this.props.style && this.props.style.width) ? 0 : 1,\n        }\n\n        var defaultProps = {\n            style: type\n        }\n        return computeProps(this.props, defaultProps);\n\n    }\n\n    setNativeProps(nativeProps) {\n      this._root.setNativeProps(nativeProps);\n    }\n\n  render() {\n    if(this.props.onPress){\n      return(\n        <TouchableOpacity onPress={this.props.onPress}>\n    <View\n      ref={component => this._root = component}\n      {...this.props}\n      {...this.prepareRootProps()}\n    >{this.props.children}</View>\n      </TouchableOpacity>\n    );\n    }\n    else{\n      return(\n        <View\n      ref={component => this._root = component}\n      {...this.props}\n      {...this.prepareRootProps()}\n    >{this.props.children}</View>\n    );\n    }\n  }\n\n}\n"]}]