["076772d3cd3ee2669676ea7333b2988248f5b383","b4b9c33e0c164b98f473bd03add6215f6c0de826",["lodash"],[319],{"version":3,"sources":["/home/cainarm/professorStars/node_modules/native-base-shoutem-theme/src/StyleNormalizer/ShorthandsNormalizerFactory.js"],"names":["createShorthand","name","type","isUndefined","SIDES","CORNERS","HORIZONTAL","VERTICAL","LEFT","RIGHT","TOP","BOTTOM","TOP_RIGHT","BOTTOM_RIGHT","TOP_LEFT","BOTTOM_LEFT","ShorthandsNormalizerFactory","createNormalizersMap","createAllSidesNormalizer","createAllCornersNormalizer","createHorizontalSidesNormalizer","createVerticalSidesNormalizer","prop","shorthand","suffix","val","normalizerCreator","getNormalizerCreator"],"mappings":";;;;;AAAA;;;;AAEA,IAAMA,kBAAkB,SAAlBA,eAAkB,CAACC,IAAD,EAAOC,IAAP;AAAA,SAAiB,EAAED,UAAF,EAAQC,MAAM,iBAAEC,WAAF,CAAcD,IAAd,IAAsBD,IAAtB,GAA6BC,IAA3C,EAAjB;AAAA,CAAxB;;AAEO,IAAME,wBAAQJ,gBAAgB,OAAhB,EAAyB,EAAzB,CAAd;AACA,IAAMK,4BAAUL,gBAAgB,SAAhB,EAA2B,EAA3B,CAAhB;AACA,IAAMM,kCAAaN,gBAAgB,YAAhB,CAAnB;AACA,IAAMO,8BAAWP,gBAAgB,UAAhB,CAAjB;;AAEA,IAAMQ,sBAAO,MAAb;AACA,IAAMC,wBAAQ,OAAd;AACA,IAAMC,oBAAM,KAAZ;AACA,IAAMC,0BAAS,QAAf;AACA,IAAMC,gCAAY,UAAlB;AACA,IAAMC,sCAAe,aAArB;AACA,IAAMC,8BAAW,SAAjB;AACA,IAAMC,oCAAc,YAApB;;IAODC,2B;AACJ,yCAAc;AAAA;;AAAA;;AACZ,SAAKC,oBAAL,mFACGb,MAAMH,IADT,EACgB,KAAKiB,wBADrB,sDAEGb,QAAQJ,IAFX,EAEkB,KAAKkB,0BAFvB,sDAGGb,WAAWL,IAHd,EAGqB,KAAKmB,+BAH1B,sDAIGb,SAASN,IAJZ,EAImB,KAAKoB,6BAJxB;AAMD;;;;6CAEwBC,I,EAAMC,S,EAAwB;AAAA,UAAbC,MAAa,uEAAJ,EAAI;;AACrD,aAAO,UAACC,GAAD;AAAA;;AAAA,4DACJH,OAAOd,IAAP,GAAcgB,MADV,EACmBC,GADnB,qCAEJH,OAAOb,KAAP,GAAee,MAFX,EAEoBC,GAFpB,qCAGJH,OAAOZ,GAAP,GAAac,MAHT,EAGkBC,GAHlB,qCAIJH,OAAOX,MAAP,GAAgBa,MAJZ,EAIqBC,GAJrB;AAAA,OAAP;AAMD;;;+CAE0BH,I,EAAMC,S,EAAwB;AAAA,UAAbC,MAAa,uEAAJ,EAAI;;AACvD,aAAO,UAACC,GAAD;AAAA;;AAAA,8DACJH,OAAOP,WAAP,GAAqBS,MADjB,EAC0BC,GAD1B,sCAEJH,OAAOT,YAAP,GAAsBW,MAFlB,EAE2BC,GAF3B,sCAGJH,OAAOR,QAAP,GAAkBU,MAHd,EAGuBC,GAHvB,sCAIJH,OAAOV,SAAP,GAAmBY,MAJf,EAIwBC,GAJxB;AAAA,OAAP;AAMD;;;oDAE+BH,I,EAAM;AACpC,aAAO,UAACG,GAAD;AAAA;;AAAA,8DACJH,OAAOd,IADH,EACUiB,GADV,sCAEJH,OAAOb,KAFH,EAEWgB,GAFX;AAAA,OAAP;AAID;;;kDAE6BH,I,EAAM;AAClC,aAAO,UAACG,GAAD;AAAA;;AAAA,8DACJH,OAAOZ,GADH,EACSe,GADT,sCAEJH,OAAOX,MAFH,EAEYc,GAFZ;AAAA,OAAP;AAID;;;yCAEoBF,S,EAAW;AAC9B,aAAO,KAAKN,oBAAL,CAA0BM,UAAUtB,IAApC,CAAP;AACD;;;qCAEgBqB,I,EAAMC,S,EAAWC,M,EAAQ;AACxC,UAAME,oBAAoB,KAAKC,oBAAL,CAA0BJ,SAA1B,CAA1B;AACA,aAAOG,kBAAkBJ,IAAlB,EAAwBC,SAAxB,EAAmCC,MAAnC,CAAP;AACD;;;;;kBAGY,IAAIR,2BAAJ,E","sourcesContent":["import _ from 'lodash';\n\nconst createShorthand = (name, type) => ({ name, type: _.isUndefined(type) ? name : type });\n\nexport const SIDES = createShorthand('Sides', '');\nexport const CORNERS = createShorthand('Corners', '');\nexport const HORIZONTAL = createShorthand('Horizontal');\nexport const VERTICAL = createShorthand('Vertical');\n\nexport const LEFT = 'Left';\nexport const RIGHT = 'Right';\nexport const TOP = 'Top';\nexport const BOTTOM = 'Bottom';\nexport const TOP_RIGHT = 'TopRight';\nexport const BOTTOM_RIGHT = 'BottomRight';\nexport const TOP_LEFT = 'TopLeft';\nexport const BOTTOM_LEFT = 'BottomLeft';\n\n// Shorthands normalizers creators.\n// This creators provide standard normalizer used in most cases.\n// When style property has any of this shorthands, use this creators\n// to create shorthand normalizer.\n\nclass ShorthandsNormalizerFactory {\n  constructor() {\n    this.createNormalizersMap = {\n      [SIDES.name]: this.createAllSidesNormalizer,\n      [CORNERS.name]: this.createAllCornersNormalizer,\n      [HORIZONTAL.name]: this.createHorizontalSidesNormalizer,\n      [VERTICAL.name]: this.createVerticalSidesNormalizer,\n    };\n  }\n\n  createAllSidesNormalizer(prop, shorthand, suffix = '') {\n    return (val) => ({\n      [prop + LEFT + suffix]: val,\n      [prop + RIGHT + suffix]: val,\n      [prop + TOP + suffix]: val,\n      [prop + BOTTOM + suffix]: val,\n    });\n  }\n\n  createAllCornersNormalizer(prop, shorthand, suffix = '') {\n    return (val) => ({\n      [prop + BOTTOM_LEFT + suffix]: val,\n      [prop + BOTTOM_RIGHT + suffix]: val,\n      [prop + TOP_LEFT + suffix]: val,\n      [prop + TOP_RIGHT + suffix]: val,\n    });\n  }\n\n  createHorizontalSidesNormalizer(prop) {\n    return (val) => ({\n      [prop + LEFT]: val,\n      [prop + RIGHT]: val,\n    });\n  }\n\n  createVerticalSidesNormalizer(prop) {\n    return (val) => ({\n      [prop + TOP]: val,\n      [prop + BOTTOM]: val,\n    });\n  }\n\n  getNormalizerCreator(shorthand) {\n    return this.createNormalizersMap[shorthand.name];\n  }\n\n  createNormalizer(prop, shorthand, suffix) {\n    const normalizerCreator = this.getNormalizerCreator(shorthand);\n    return normalizerCreator(prop, shorthand, suffix);\n  }\n}\n\nexport default new ShorthandsNormalizerFactory();\n"]}]