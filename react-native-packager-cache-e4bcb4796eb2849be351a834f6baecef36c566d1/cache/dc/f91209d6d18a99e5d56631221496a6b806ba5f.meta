["15e02ee8cd3d8e75cd23bc671bbd5e134068e164","e9d9dc530f8fac939a72fb1a4421a45544694224",["react","react-native","../Utils/computeProps","lodash","./Col","./Row"],[131,228,274,396,488,573],{"version":3,"sources":["/home/cainarm/professorStars/node_modules/react-native-easy-grid/Components/Grid.js"],"names":["GridNB","type","flex","flexDirection","ifRow","defaultProps","style","props","row","Children","forEach","children","child","nativeProps","_root","setNativeProps","onPress","component","prepareRootProps"],"mappings":"AAAA;;;;;;;AAEA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;IAGqBA,M;;;;;;;;;;uCACE;;AAEf,UAAIC,OAAO;AACPC,cAAM,CADC;AAEPC,uBAAe,KAAKC,KAAL,KAAe,QAAf,GAA0B;AAFlC,OAAX;;AAKA,UAAIC,eAAe;AACfC,eAAOL;AADQ,OAAnB;;AAIA,aAAO,4BAAa,KAAKM,KAAlB,EAAyBF,YAAzB,CAAP;AAEH;;;4BAEO;AACJ,UAAIG,MAAM,KAAV;AACA,sBAAMC,QAAN,CAAeC,OAAf,CAAuB,KAAKH,KAAL,CAAWI,QAAlC,EAA4C,UAAUC,KAAV,EAAiB;AACzD,YAAGA,SAASA,MAAMX,IAAN,iBAAZ,EACIO,MAAM,IAAN;AACP,OAHD;AAIA,aAAOA,GAAP;AACH;;;mCAEcK,W,EAAa;AAC1B,WAAKC,KAAL,CAAWC,cAAX,CAA0BF,WAA1B;AACD;;;6BAEM;AAAA;;AACP,UAAG,KAAKN,KAAL,CAAWS,OAAd,EAAsB;AACpB,eACE;AAAA;AAAA,YAAkB,SAAS,KAAKT,KAAL,CAAWS,OAAtC;AACJ;AAAA;AAAA;AACE,mBAAK;AAAA,uBAAa,OAAKF,KAAL,GAAaG,SAA1B;AAAA;AADP,eAEM,KAAKV,KAFX,EAGM,KAAKW,gBAAL,EAHN;AAIE,iBAAKX,KAAL,CAAWI;AAJb;AADI,SADF;AASD,OAVD,MAWI;AACF,eACE;AAAA;AAAA;AACF,iBAAK;AAAA,qBAAa,OAAKG,KAAL,GAAaG,SAA1B;AAAA;AADH,aAEE,KAAKV,KAFP,EAGE,KAAKW,gBAAL,EAHF;AAIF,eAAKX,KAAL,CAAWI;AAJT,SADF;AAOD;AACF;;;;;kBAlDkBX,M","sourcesContent":["'use strict';\n\nimport React, {Component} from 'react';\nimport {View, TouchableOpacity} from 'react-native';\nimport computeProps from '../Utils/computeProps';\nimport _ from 'lodash';\nimport Col from './Col';\nimport Row from './Row';\n\n\nexport default class GridNB extends Component {\n    prepareRootProps() {\n\n        var type = {\n            flex: 1,\n            flexDirection: this.ifRow() ? 'column' : 'row'\n        }\n\n        var defaultProps = {\n            style: type\n        }\n\n        return computeProps(this.props, defaultProps);\n\n    }\n\n    ifRow() {\n        var row = false;\n        React.Children.forEach(this.props.children, function (child) {\n            if(child && child.type == Row)\n                row = true;\n        })\n        return row;\n    }\n\n    setNativeProps(nativeProps) {\n      this._root.setNativeProps(nativeProps);\n    }\n\n  render() {\n    if(this.props.onPress){\n      return(\n        <TouchableOpacity onPress={this.props.onPress}>\n    <View\n      ref={component => this._root = component}\n      {...this.props}\n      {...this.prepareRootProps()}\n    >{this.props.children}</View>\n      </TouchableOpacity>\n    );\n    }\n    else{\n      return(\n        <View\n      ref={component => this._root = component}\n      {...this.props}\n      {...this.prepareRootProps()}\n    >{this.props.children}</View>\n    );\n    }\n  }\n\n}\n"]}]