["d6c4c65d961374d753cbd94afd13d53aca1b772c","8c19aa618b7a142cde8ccab0860d3bd901d015ec",["react","react-native","../Utils/computeProps","lodash"],[131,228,274,396],{"version":3,"sources":["/home/cainarm/professorStars/node_modules/react-native-easy-grid/Components/Row.js"],"names":["RowNB","type","flexDirection","flex","props","size","style","height","defaultProps","nativeProps","_root","setNativeProps","onPress","component","prepareRootProps","children"],"mappings":"AAAA;;;;;;;AAEA;;;;AACA;;AAEA;;;;AACA;;;;IAGqBA,K;;;;;;;;;;uCACE;;AAEf,UAAIC,OAAO;AACVC,uBAAe,KADL;AAEVC,cAAO,KAAKC,KAAL,CAAWC,IAAZ,GAAoB,KAAKD,KAAL,CAAWC,IAA/B,GAAuC,KAAKD,KAAL,CAAWE,KAAX,IAAoB,KAAKF,KAAL,CAAWE,KAAX,CAAiBC,MAAtC,GAAgD,CAAhD,GAAoD;AAFtF,OAAX;;AAKA,UAAIC,eAAe;AACfF,eAAOL;AADQ,OAAnB;AAGA,aAAO,4BAAa,KAAKG,KAAlB,EAAyBI,YAAzB,CAAP;AAEH;;;mCAEcC,W,EAAa;AAC1B,WAAKC,KAAL,CAAWC,cAAX,CAA0BF,WAA1B;AACD;;;6BAEQ;AAAA;;AACP,UAAG,KAAKL,KAAL,CAAWQ,OAAd,EAAsB;AACpB,eACI;AAAA;AAAA,YAAkB,SAAS,KAAKR,KAAL,CAAWQ,OAAtC;AACF;AAAA;AAAA;AACF,mBAAK;AAAA,uBAAa,OAAKF,KAAL,GAAaG,SAA1B;AAAA;AADH,eAEE,KAAKT,KAFP,EAGE,KAAKU,gBAAL,EAHF;AAIF,iBAAKV,KAAL,CAAWW;AAJT;AADE,SADJ;AASD,OAVD,MAWI;AACF,eACE;AAAA;AAAA;AACE,iBAAK;AAAA,qBAAa,OAAKL,KAAL,GAAaG,SAA1B;AAAA;AADP,aAEM,KAAKT,KAFX,EAGM,KAAKU,gBAAL,EAHN;AAIE,eAAKV,KAAL,CAAWW;AAJb,SADF;AAOD;AACF;;;;;kBAxCgBf,K","sourcesContent":["'use strict';\n\nimport React, {Component} from 'react';\nimport {View, TouchableOpacity} from 'react-native';\n\nimport computeProps from '../Utils/computeProps';\nimport _ from 'lodash';\n\n\nexport default class RowNB extends Component {\n    prepareRootProps() {\n\n        var type = {\n        \tflexDirection: 'row',\n        \tflex: (this.props.size) ? this.props.size : (this.props.style && this.props.style.height) ? 0 : 1,\n        }\n\n        var defaultProps = {\n            style: type\n        }\n        return computeProps(this.props, defaultProps);\n\n    }\n\n    setNativeProps(nativeProps) {\n      this._root.setNativeProps(nativeProps);\n    }\n\n    render() {\n      if(this.props.onPress){\n        return(\n            <TouchableOpacity onPress={this.props.onPress}>\n          <View\n        ref={component => this._root = component}\n        {...this.props}\n        {...this.prepareRootProps()}\n      >{this.props.children}</View>\n          </TouchableOpacity>\n      );\n      }\n      else{\n        return(\n          <View\n            ref={component => this._root = component}\n            {...this.props}\n            {...this.prepareRootProps()}\n          >{this.props.children}</View>\n        );\n      }\n    }\n\n\n}\n"]}]